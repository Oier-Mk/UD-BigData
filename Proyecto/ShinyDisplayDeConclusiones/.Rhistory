shiny::runApp()
data <- read_excel("DatosParaMostrar/data.xlsx")
filtro = data$AMT_CREDIT >= data$AMT_INCOME_TOTAL * 0.4
posiblesDenegados = data[filtro,]
filtro = data$AMT_CREDIT >= data$AMT_INCOME_TOTAL * 0.4
filtro = (data$AMT_CREDIT >= data$AMT_INCOME_TOTAL * 0.4)
filtro = (data$AMT_CREDIT >= data$AMT_INCOME_TOTAL )
posiblesDenegados = data[filtro,]
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
actionButton("go", "Boxplot"),
)
server <- function(input, output) {
output$plot <- renderPlot({
boxplot(posiblesDenegados$AMT_INCOME_TOTAL * 0.4)
})
observeEvent(input$go, {
showModal(modalDialog(
plotOutput("plot"),
footer = NULL,
easyClose = TRUE
))
})
}
shinyApp(ui, server)
denegados <- read_excel("DatosParaMostrar/Denegados.xlsx")
aceptados <- read_excel("DatosParaMostrar/Aceptados.xlsx")
estudiar <- read_excel("DatosParaMostrar/AEstudiar.xlsx")
pie(aceptados$NAME_EDUCATION_TYPE)
pie(table(aceptados$NAME_EDUCATION_TYPE))
runApp()
ui <- fluidPage(
label("Aceptados"),
actionButton("go", "Pieplot con tipos de trabajo"),
)
server <- function(input, output) {
output$plot <- renderPlot({
pie(table(aceptados$NAME_EDUCATION_TYPE))
})
observeEvent(input$go, {
showModal(modalDialog(
plotOutput("plot"),
footer = NULL,
easyClose = TRUE
))
})
}
runApp()
library("readxl")
library("writexl")
library("ggplot2")
datos <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- grepl(datos$STATE, "A", fixed = TRUE)
aceptados <- grepl(datos$STATE, "A")
datos <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
datos$aceptados <- grepl(datos$STATE, "A")
View(datos)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
shiny::runApp()
runApp()
aceptados <- data[data$STATE = "A",]
aceptados <- data[data$STATE = TRUE,]
library("readxl")
library("writexl")
library("ggplot2")
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE = TRUE,]
library("readxl")
library("writexl")
library("ggplot2")
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE =+ TRUE,]
library("readxl")
library("writexl")
library("ggplot2")
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE == TRUE,]
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
titlePanel("Basic widgets"),
actionButton("tdt", "Pieplot con tipos de trabajo"),
actionButton("go", "Pieplot con tipos de trabajo"),
)
server <- function(input, output) {
output$pieplot <- renderPlot({
pie(table(aceptados$NAME_EDUCATION_TYPE))
})
observeEvent(
input$tdt, {
showModal(modalDialog(
plotOutput("pieplot"),
footer = NULL,
easyClose = TRUE
))
})
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
library("readxl")
library("writexl")
library("ggplot2")
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE == TRUE,]
denegados <- data[data$STATE == FALSE,]
# Define UI for application that draws a histogram
library(shiny)
ui <- fluidPage(
titlePanel("Basic widgets"),
actionButton("tdt", "Pieplot con tipos de trabajo"),
actionButton("ad", "Pieplot con tipos de trabajo"),
)
server <- function(input, output) {
# output$pieplot <- renderPlot({
#   pie(table(data$NAME_EDUCATION_TYPE))
# })
output$pieplot <- renderPlot({
# Basic piechart
ggplot(data, aes(x="nombre", y=NAME_EDUCATION_TYPE, fill=NAME_EDUCATION_TYPE)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
})
observeEvent(
input$tdt, {
showModal(modalDialog(
plotOutput("pieplot"),
footer = NULL,
easyClose = TRUE
))
})
}
shinyApp(ui, server)
ggplot(data,aes(x=NAME_EDUCATION_TYPE,y=AMT_CREDIT))+geom_boxplot()
runApp()
runApp()
runApp()
runApp()
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE == TRUE,]
denegados <- data[data$STATE == FALSE,]
data <- read_excel("DatosParaMostrar/DataProcesado.xlsx")
aceptados <- data[data$STATE == TRUE,]
denegados <- data[data$STATE == FALSE,]
View(aceptados)
runApp()
View(aceptados)
runApp()
View(aceptados)
ggplot(aceptados,aes(x=ITERATION,y=AMT_CREDIT))+geom_boxplot()
