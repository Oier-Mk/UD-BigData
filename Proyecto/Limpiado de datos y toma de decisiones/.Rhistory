conHijos = casosEstudio[filtro,]
filtro = casosEstudio$CNT_CHILDREN == 0
sinHijos = casosEstudio[filtro,]
View(sinHijos)
View(sinHijos)
View(conHijos)
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8
casosEstudio = casosEstudio[filtro,]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio2)
View(aceptados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
View(aceptados)
View(casosEstudio)
View(denegados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados)
filtro = casosEstudio$AMT_CREDIT >= casosEstudio$AMT_GOODS_PRICE * 0.8
denegados = denegados[filtro,]
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8 #TODO BORRAR LOS NA
aceptados =  na.ommit(rbind(casosEstudio[filtro,],aceptados))
aceptados =  na.omit(rbind(casosEstudio[filtro,],aceptados))
aceptados =  rbind(casosEstudio[filtro,],aceptados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8 #TODO BORRAR LOS NA
prov = casosEstudio[filtro,]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(prov)
filtro = casosEstudio$AMT_CREDIT >= casosEstudio$AMT_GOODS_PRICE * 0.8
denegados = denegados[filtro,]
filtro = casosEstudio$AMT_CREDIT >= casosEstudio$AMT_GOODS_PRICE * 0.8
casosEstudio = casosEstudio[filtro,]
library("readxl")
library("writexl")
library("ggplot2")
path = "/Users/mentxaka/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/ShinyDisplayDeConclusiones/DatosParaMostrar/"
data <- read_excel("XLSX/DatosLimpios.xlsx")
enteros = data.frame(data$TARGET,	data$CODE_GENDER,	data$CNT_CHILDREN,	data$AMT_INCOME_TOTAL,	data$AMT_CREDIT,	data$AMT_ANNUITY,	data$AMT_GOODS_PRICE,	data$REGION_POPULATION_RELATIVE,	data$DAYS_BIRTH,	data$DAYS_EMPLOYED,	data$DAYS_REGISTRATION,	data$DAYS_ID_PUBLISH,	data$OWN_CAR_AGE,	data$FLAG_EMP_PHONE,	data$FLAG_WORK_PHONE,	data$FLAG_CONT_MOBILE,	data$FLAG_PHONE,	data$FLAG_EMAIL,	data$CNT_FAM_MEMBERS,	data$REGION_RATING_CLIENT,	data$HOUR_APPR_PROCESS_START,	data$APARTMENTS_AVG,	data$DEF_CNT_SOCIAL_CIRCLE,	data$DAYS_LAST_PHONE_CHANGE,	data$AMT_REQ_CREDIT_BUREAU)
summary(enteros)
correlacion = round(cor(enteros),digits = 2)
correlacion = as.data.frame(t(correlacion))
summary(correlacion)
filtro = data$AMT_CREDIT < data$AMT_INCOME_TOTAL * 0.4
aceptados = data[filtro,]
filtro = data$AMT_CREDIT >= data$AMT_INCOME_TOTAL * 0.4
posiblesDenegados = data[filtro,]
summary(posiblesDenegados$AMT_INCOME_TOTAL * 0.4)
filtro = posiblesDenegados$AMT_INCOME_TOTAL * 0.4 > 81000
denegados = posiblesDenegados[filtro,] #OUTLIERS
filtro = posiblesDenegados$AMT_INCOME_TOTAL * 0.4 <= 81000
casosEstudio = posiblesDenegados[filtro,]
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8 #TODO BORRAR LOS NA
prov = casosEstudio[filtro,]
casosEstudio$inferior08 = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
aceptados =  rbind(rep(prov),rep( aceptados))
aceptados =  rbind(rep(prov),rep( aceptados),aceptados)
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8 #TODO BORRAR LOS NA
casosEstudio$inferior08 = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8
filtro = casosEstudio$inferior08 == TRUE
prov = casosEstudio[filtro,]
prov$inferior08 = NULL
aceptados =  rbind(prov,aceptados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
casosEstudio = casosEstudio[filtro,]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
str(prov)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casos)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/LimpiadoDeDatos.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/LimpiadoDeDatos.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/LimpiadoDeDatos.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/LimpiadoDeDatos.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
conProp = casosEstudio[omit.na(casosEstudio$APARTMENTS_AVG),]
conProp = casosEstudio[na.omit(casosEstudio$APARTMENTS_AVG),]
str(casosEstudio$APARTMENTS_AVG)
summary(casosEstudio$APARTMENTS_AVG)
conProp = casosEstudio[na.omit(casosEstudio$APARTMENTS_AVG),]
summary(casosEstudio$APARTMENTS_AVG)
conProp = casosEstudio[na.omit(casosEstudio$APARTMENTS_AVG),]
conProp = casosEstudio[na.omit(casosEstudio$APARTMENTS_AVG),]
str(casosEstudio$APARTMENTS_AVG)
summary(casosEstudio$APARTMENTS_AVG)
filtro = na.omit(casosEstudio$APARTMENTS_AVG)
summary(filtro)
conProp = casosEstudio[filtro,]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
rlang::last_error()
conProp = casosEstudio[filtro,]
casosEstudio$apartamento = is.na(casosEstudio$APARTMENTS_AVG)
conProp = casosEstudio[apartamento == FALSE,]
conProp = casosEstudio[casosEstudio$apartamento == FALSE,]
View(conProp)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(conProp)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(denegados2)
View(denegados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
#PROPIEDADES
summary(is.na(casosEstudio$APARTMENTS_AVG))
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
casosEstudio$apartamento = NULL;
denegados2$apartamento = NULL;
#SI TIENE PROPIEDADES Y NO TIENE HIJOS SE CONCEDE
filtro = casosEstudio$CNT_CHILDREN == 0
aceptados2 = casosEstudio[filtro,] #ACEPTADOS2 -> ACEPTADOS PORQUE NO TIENEN HIJOS
View(aceptados2)
#SI TIENE PROPIEDADES Y TIENE HIJOS SE ESTUDIA
filtro = casosEstudio$CNT_CHILDREN > 0
casosEstudio = casosEstudio[filtro,]
View(aceptados1)
#CANTIDAD DE TRABAJADORES
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 1 -> NO SE CONCEDE
casosEstudio$CNT_WORKERS = casosEstudio$CNT_FAM_MEMBERS - casosEstudio$CNT_CHILDREN
#CANTIDAD DE TRABAJADORES
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 1 -> NO SE CONCEDE
casosEstudio$CNT_WORKERS = casosEstudio$CNT_FAM_MEMBERS - casosEstudio$CNT_CHILDREN
filtro = casosEstudio$CNT_WORKERS == 1
denegados3 = casosEstudio[filtro,]
View(denegados3)
View(denegados3)
summary(casosEstudio$CNT_FAM_MEMBERS)
summary(casosEstudio$CNT_CHILDREN)
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 2 O 3 -> SE ESTUDIA
filtro = casosEstudio$CNT_WORKERS >= 2 && casosEstudio$CNT_WORKERS <= 3
casosEstudio = casosEstudio[filtro,]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
summary(casosEstudio$CNT_WORKERS)
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 4 O MAS -> SE CONCEDE
filtro = casosEstudio$CNT_WORKERS >= 4
aceptados4 = casosEstudio[filtro,]
View(aceptados4)
#COCHE
#SI TIENE UN COCHE MENOR DE 5 AÑOS SE CONCEDE
filtro = casosEstudio$OWN_CAR_AGE <= 5
aceptados5 = casosEstudio[filtro,]
View(aceptados5)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(denegados4)
View(denegados4)
summary(denegados4$OWN_CAR_AGE)
View(aceptados5)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados5)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
View(denegados4)
View(denegados3)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
View(casosEstudio)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
#COCHE
#SI NO TIENE COCHE SE DENIEGA AUTOMATICAMENTE
summary(is.na(casosEstudio$OWN_CAR_AGE))
#PROPIEDADES
summary(is.na(casosEstudio$APARTMENTS_AVG))
table(is.na(casosEstudio$OWN_CAR_AGE))
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
filtro = is.na(casosEstudio$OWN_CAR_AGE)
denegados4 = casosEstudio[filtro,]
View(denegados4)
#BORRAMOS LOS NA DE LOS COCHES PARA QUE NO AFECTEN A LOS PROXIMOS ESTUDIOS
filtro = na.omit(casosEstudio$OWN_CAR_AGE)
casosEstudio = casosEstudio[filtro,]
View(casosEstudio)
summary(casosEstudio$OWN_CAR_AGE)
#BORRAMOS LOS NA DE LOS COCHES PARA QUE NO AFECTEN A LOS PROXIMOS ESTUDIOS
filtro = na.omit(casosEstudio$OWN_CAR_AGE)
casosEstudio = casosEstudio[filtro,]
summary(casosEstudio$OWN_CAR_AGE)
#summary(is.na(casosEstudio$OWN_CAR_AGE))
#table(is.na(casosEstudio$OWN_CAR_AGE))
casosEstudio$coche = is.na(casosEstudio$OWN_CAR_AGE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
filtro = casosEstudio$coche == TRUE
denegados4 = casosEstudio[filtro,]
View(denegados4)
denegados4$coche = NULL
View(denegados4)
#BORRAMOS LOS NA DE LOS COCHES PARA QUE NO AFECTEN A LOS PROXIMOS ESTUDIOS
filtro = casosEstudio$coche == FALSE
casosEstudio = casosEstudio[filtro,]
casosEstudio$coche = NULL
summary(casosEstudio$OWN_CAR_AGE)
#SI TIENE UN COCHE MENOR DE 5 AÑOS SE CONCEDE
filtro = casosEstudio$OWN_CAR_AGE < 5
aceptados5 = casosEstudio[filtro,]
View(aceptados5)
summary(aceptados5$OWN_CAR_AGE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados1)
View(aceptados2)
View(aceptados3)
View(aceptados4)
View(aceptados5)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(denegados4)
#SI TIENE UN COCHE DE MAS DE 10 AÑOS NO SE CONCEDE
filtro = casosEstudio$OWN_CAR_AGE >= 10
demegados5 = casosEstudio[filtro,]
#SI TIENE UN COCHE DE ENTRE 5 Y 10 AÑOS TODO ....
filtro = casosEstudio$OWN_CAR_AGE >=5 & casosEstudio$OWN_CAR_AGE < 10
aceptados4 = casosEstudio[filtro,]
View(aceptados4)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(casosEstudio)
table(casosEstudio$OCCUPATION_TYPE)
#FUNCIONARIO
#SI ES FUNCIONARIO SE ACEPTA
filtro = casosEstudio$NAME_INCOME_TYPE == "State servant"
aceptados5 = casosEstudio[filtro,]
View(aceptados5)
#SI NO ES FUNCIONARIO SE DENIEGA
filtro = casosEstudio$NAME_INCOME_TYPE != "State servant"
denegados6 = casosEstudio[filtro,]
View(denegados6)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados1)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(posiblesDenegados)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
summary(aceptados1)
summary(aceptados2)
summary(aceptados3)
summary(aceptados4)
summary(aceptados5)
summary(aceptados6)
summary(denegados1)
summary(denegados2)
summary(denegados3)
summary(denegados4)
summary(denegados5)
summary(denegados6)
summary(aceptados1$TARGET)
count(aceptados1)
table(aceptados1)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados6)
/* dfg */
data
"
enteros = data.frame(data$TARGET,	data$CODE_GENDER,	data$CNT_CHILDREN,	data$AMT_INCOME_TOTAL,	data$AMT_CREDIT,	data$AMT_ANNUITY,	data$AMT_GOODS_PRICE,	data$REGION_POPULATION_RELATIVE,	data$DAYS_BIRTH,	data$DAYS_EMPLOYED,	data$DAYS_REGISTRATION,	data$DAYS_ID_PUBLISH,	data$OWN_CAR_AGE,	data$FLAG_EMP_PHONE,	data$FLAG_WORK_PHONE,	data$FLAG_CONT_MOBILE,	data$FLAG_PHONE,	data$FLAG_EMAIL,	data$CNT_FAM_MEMBERS,	data$REGION_RATING_CLIENT,	data$HOUR_APPR_PROCESS_START,	data$APARTMENTS_AVG,	data$DEF_CNT_SOCIAL_CIRCLE,	data$DAYS_LAST_PHONE_CHANGE,	data$AMT_REQ_CREDIT_BUREAU)
summary(enteros)
#chart.Correlation(enteros, histogram = TRUE, method = "pearson")
correlacion = round(cor(enteros),digits = 2)
correlacion = as.data.frame(t(correlacion))
summary(correlacion)
#write_xlsx(correlacion,"XLSX/correlacion.xlsx")
#EN CASO DE QUE LOS GASTOS DEL USUARIO NO SUPEREN EL 40% DE LOS INGRESOS ANUALES --> SE ACEPTA AUTOMATICAMENTE aunque se estudia la media de los candidatos
filtro = data$AMT_CREDIT < data$AMT_INCOME_TOTAL * 0.4
aceptados1 = data[filtro,]
write_xlsx(aceptados1,"XLSX/Split/Aceptados1.xlsx")
#EN CASO DE QUE LOS GASTOS DEL USUARIO SUPEREN EL 40% DE LOS INGRESOS ANUALES --> SE DENIEGA
filtro = data$AMT_CREDIT >= data$AMT_INCOME_TOTAL * 0.4
casosEstudio = data[filtro,]
#CLIENTES A LOS QUE SE LES DENIEGA EL CREDITO AUTOMATICAMENTE
#boxplot(casosEstudio$AMT_INCOME_TOTAL * 0.4) #BOXPLOT PARA SABER CUALES SON LOS OUTLIERS
#summary(casosEstudio$AMT_INCOME_TOTAL * 0.4) #SABEMOS EL VALOR DEL TERCER CUARTIL
filtro = casosEstudio$AMT_INCOME_TOTAL * 0.4 > 81000
denegados1 = casosEstudio[filtro,] #OUTLIERS
write_xlsx(denegados1,"XLSX/Split/Denegados1.xlsx")
#ESTUDIO DE LOS CLIENTES QUE ESTÁN AL BORDE DE ACCEDER
filtro = casosEstudio$AMT_INCOME_TOTAL * 0.4 <= 81000
casosEstudio = casosEstudio[filtro,]
#CANTIDAD SOLICITADA
#CANTIDAD INFERIOR AL 80% DEL VALOR DE TASACION DEL BIEN
filtro = casosEstudio$AMT_CREDIT < casosEstudio$AMT_GOODS_PRICE * 0.8
aceptados2 = casosEstudio[filtro,] #ACEPTADOS1 -> ACEPTADOS PORQUE PIDEN MENOS DEL 80% DEL VALOR DE TASACIÓN
write_xlsx(aceptados2,"XLSX/Split/Aceptados2.xlsx")
#CANTIDAD SUPERIOR AL 80% DEL VALOR DE TASACION
filtro = casosEstudio$AMT_CREDIT >= casosEstudio$AMT_GOODS_PRICE * 0.8
casosEstudio = casosEstudio[filtro,]
#PROPIEDADES
casosEstudio$apartamento = is.na(casosEstudio$APARTMENTS_AVG)
#SI NO TIENE PROPIEDADES NO SE CONCEDE
denegados2 = casosEstudio[casosEstudio$apartamento == TRUE,] #DENEGADOS2 -> DENEGADOS POR NO TENER PROPIEDADES
denegados2$apartamento = NULL;
write_xlsx(denegados2,"XLSX/Split/Denegados2.xlsx")
#SI TIENE PROPIEDADES SE ESTUDIA
casosEstudio = casosEstudio[casosEstudio$apartamento == FALSE,]
casosEstudio$apartamento = NULL;
#HIJOS
#SI TIENE PROPIEDADES Y NO TIENE HIJOS SE CONCEDE
filtro = casosEstudio$CNT_CHILDREN == 0
aceptados3 = casosEstudio[filtro,] #ACEPTADOS3 -> ACEPTADOS PORQUE NO TIENEN HIJOS
write_xlsx(aceptados3,"XLSX/Split/Aceptados3.xlsx")
#SI TIENE PROPIEDADES Y TIENE HIJOS SE ESTUDIA
filtro = casosEstudio$CNT_CHILDREN > 0
casosEstudio = casosEstudio[filtro,]
#CANTIDAD DE TRABAJADORES
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 1 -> NO SE CONCEDE
casosEstudio$CNT_WORKERS = casosEstudio$CNT_FAM_MEMBERS - casosEstudio$CNT_CHILDREN
filtro = casosEstudio$CNT_WORKERS == 1
denegados3 = casosEstudio[filtro,]
denegados3$CNT_WORKERS = NULL
write_xlsx(denegados3,"XLSX/Split/Denegados3.xlsx")
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 4 O MAS -> SE CONCEDE
filtro = casosEstudio$CNT_WORKERS >= 4
aceptados4 = casosEstudio[filtro,] #VACIO, NO HAY MAS DE DOS TRABAJADORES EN EL NUCLEO FAMILIAR
aceptados4$CNT_WORKERS = NULL
write_xlsx(aceptados4,"XLSX/Split/Aceptados4.xlsx")
#SI LA CANTIDAD DE TRABAJADORES EN CASA ES 2 O 3 -> SE ESTUDIA
filtro = casosEstudio$CNT_WORKERS >= 2 & casosEstudio$CNT_WORKERS <= 3
casosEstudio = casosEstudio[filtro,]
casosEstudio$CNT_WORKERS = NULL
#COCHE
#SI NO TIENE COCHE SE DENIEGA AUTOMATICAMENTE
casosEstudio$coche = is.na(casosEstudio$OWN_CAR_AGE) #COLUMNA PROVISIONAL
filtro = casosEstudio$coche == TRUE
denegados4 = casosEstudio[filtro,]
denegados4$coche = NULL
write_xlsx(denegados4,"XLSX/Split/Denegados4.xlsx")
#BORRAMOS LOS NA DE LOS COCHES PARA QUE NO AFECTEN A LOS PROXIMOS ESTUDIOS
filtro = casosEstudio$coche == FALSE
casosEstudio = casosEstudio[filtro,]
casosEstudio$coche = NULL
#SI TIENE UN COCHE MENOR DE 5 AÑOS SE CONCEDE
filtro = casosEstudio$OWN_CAR_AGE < 5
aceptados5 = casosEstudio[filtro,]
write_xlsx(aceptados5,"XLSX/Split/Aceptados5.xlsx")
#SI TIENE UN COCHE DE MAS DE 10 AÑOS NO SE CONCEDE
filtro = casosEstudio$OWN_CAR_AGE >= 10
denegados5 = casosEstudio[filtro,]
write_xlsx(denegados5,"XLSX/Split/Denegados5.xlsx")
#SI TIENE UN COCHE DE ENTRE 5 Y 10 AÑOS TODO ....
filtro = casosEstudio$OWN_CAR_AGE >=5 & casosEstudio$OWN_CAR_AGE < 10
casosEstudio = casosEstudio[filtro,]
#FUNCIONARIO
#SI ES FUNCIONARIO SE ACEPTA
filtro = casosEstudio$NAME_INCOME_TYPE == "State servant" | casosEstudio$TARGET == 0
aceptados6 = casosEstudio[filtro,]
write_xlsx(aceptados6,"XLSX/Split/Aceptados6.xlsx")
#SI NO ES FUNCIONARIO SE DENIEGA
filtro = casosEstudio$NAME_INCOME_TYPE != "State servant" | casosEstudio$TARGET == 1
denegados6 = casosEstudio[filtro,]
write_xlsx(denegados6,"XLSX/Split/Denegados6.xlsx")
"
data
data <- read_excel("XLSX/DatosLimpios.xlsx")
data <- read_excel("XLSX/DatosLimpios.xlsx")
data <- read_excel("XLSX/DatosLimpios.xlsx")
library("readxl")
library("writexl")
library("ggplot2")
data <- read_excel("XLSX/DatosLimpios.xlsx")
data$ATM_A
summary(data$ATM_CREDIT)
summary(data$AMT_CREDIT)
summary(data$AMT_ANNUITY)
summary(data$AMT_CREDIT)
boxplot()
boxplot(data$AMT_ANNUITY)
boxplot(data$AMT_CREDIT)
boxplot(data$AMT_ANNUITY)
boxplot(data$AMT_CREDIT)
boxplot(data$AMT_CREDIT)
boxplot(data$AMT_ANNUITY)
boxplot(data$AMT_CREDIT)
p3 <- ggplot(data, aes(x=AMT_ANNUITY, y=AMT_CREDIT)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
library(hrbrthemes)
library("hrbrthemes")
install.packages("hrbrthemes")
p3 <- ggplot(data, aes(x=AMT_ANNUITY, y=AMT_CREDIT)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
library("hrbrthemes")
p3 <- ggplot(data, aes(x=AMT_ANNUITY, y=AMT_CREDIT)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
p3
data = data$AMT_ANNUITY, data$AMT_CREDIT
data = data$AMT_ANNUITY data$AMT_CREDIT
data = data[c(data$AMT_ANNUITY, data$AMT_CREDIT))]
data = data[c(data$AMT_ANNUITY, data$AMT_CREDIT)]
cols <- c(data$AMT_ANNUITY, data$AMT_CREDIT)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/Annuity&Credit.R", echo=TRUE)
summary(cols)
data = data[c(data$AMT_ANNUITY, data$AMT_CREDIT),]
data = data[c(,data$AMT_ANNUITY, data$AMT_CREDIT)]
data = data[,data$AMT_ANNUITY, data$AMT_CREDIT]
data = data[,cols]
data = data[,cols]
data = data[cols]
cols <- c(data$AMT_ANNUITY, data$AMT_CREDIT)
data = data[cols]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/Annuity&Credit.R", echo=TRUE)
data1 = data[cols]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/Annuity&Credit.R", echo=TRUE)
cols <- c(data$AMT_ANNUITY*1000, data$AMT_CREDIT*1000)
data1 = data[cols]
cols <- c(Int(data$AMT_ANNUITY*1000), data$AMT_CREDIT*1000)
cols <- c(integer(data$AMT_ANNUITY*1000), data$AMT_CREDIT*1000)
data <- read_excel("XLSX/DatosLimpios.xlsx")
View(data)
cols = c(5,6)
data1 = data[c]
summary(cols)
cols = c(data$AMT_ANNUITY,data$AMT_CREDIT)
summary(cols)
data1 = data[c]
summary(data$AMT_ANNUITY,data$AMT_CREDIT)
summary(data$AMT_ANNUITY)
summary(data$AMT_CREDIT)
data = as.data.frame(data$AMT_CREDIT,data$AMT_ANNUITY)
data = as.data.frame.numeric(data$AMT_CREDIT,data$AMT_ANNUITY)
summary(data)
View(data)
data[, c("AMT_ANNUITY", "AMT_CREDIT")]
data[, c(data$AMT_ANNUITY, data$AMT_CREDIT)]
View(data)
data <- read_excel("XLSX/DatosLimpios.xlsx")
data[, c(data$AMT_ANNUITY, data$AMT_CREDIT)]
data <- read_excel("XLSX/DatosLimpios.xlsx")
data[, c(as.integer(data$AMT_ANNUITY), as.integer(data$AMT_CREDIT))]
filtro = c(as.integer(data$AMT_ANNUITY), as.integer(data$AMT_CREDIT))
summary(filtro)
data[, filtro]
filtro = c(as.integer("AMT_ANNUITY"), as.integer("AMT_CREDIT"))
data[, filtro]
filtro = c(as.integer("data$AMT_ANNUITY"), as.integer("data$AMT_CREDIT"))
data[, filtro]
data <- read_excel("XLSX/DatosLimpios.xlsx")
filtro = c(as.integer("data$AMT_ANNUITY"), as.integer("data$AMT_CREDIT"))
data[, filtro]
filtro = c(as.integer(data$AMT_ANNUITY), as.integer(data$AMT_CREDIT))
data[, filtro]
data <- read_excel("XLSX/DatosLimpios.xlsx")
filtro = c(as.integer(data$AMT_ANNUITY), as.integer(data$AMT_CREDIT))
data[, filtro]
filtro
data <- read_excel("XLSX/DatosLimpios.xlsx")
data2 = data
data2 = data[,data$AMT_CREDIT,data$AMT_ANNUITY]
data2 = data[,as.integer(data$AMT_CREDIT),as.integer(data$AMT_ANNUITY)]
filtro = c(as.integer(data$AMT_ANNUITY), as.integer(data$AMT_CREDIT))
data[, filtro]
filtro
boxplot(data$AMT_ANNUITY)
boxplot(data$AMT_CREDIT)
p3 <- ggplot(data, aes(x=AMT_ANNUITY, y=AMT_CREDIT)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
p3
data2 = data[,as.integer(data$AMT_CREDIT),as.integer(data$AMT_ANNUITY)]
data2 = data[,as.integer(AMT_CREDIT),as.integer(AMT_ANNUITY)]
boxplot(data$AMT_ANNUITY)
data2 = data[,as.integer("AMT_CREDIT"),as.integer("AMT_ANNUITY")]
colnames(data2) = c("AMT_CREDIT","AMT_ANNUITY")
View(data2)
data <- read_excel("XLSX/DatosLimpios.xlsx")
colnames(data2) = c("AMT_CREDIT","AMT_ANNUITY")
colnames(data) = data[c("AMT_CREDIT","AMT_ANNUITY")]
data <- read_excel("XLSX/DatosLimpios.xlsx")
data2 = data[c("AMT_CREDIT","AMT_ANNUITY")]
View(data2)
View(data2)
data = data[c("AMT_CREDIT","AMT_ANNUITY")]
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/Annuity&Credit.R", echo=TRUE)
colnames(data) <- c(CREDITO,PAGOSANUALES)
colnames(data) <- c("CREDITO","PAGOSANUALES")
colnames(data) <- c("CREDITO","PAGOS_ANUALES")
library("readxl")
library("writexl")
data <- read_excel("XLSX/data.xlsx")
write_xlsx(data,"XLSX/data.xlsx")
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/LimpiadoDeDatos.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
source("~/Documents/Universidad De Deusto/2021-22/1er Semestre/Big Data y Business Intelligence/Proyecto/Limpiado de datos y toma de decisiones/TomaDeDecisiones.R", echo=TRUE)
View(aceptados1)
